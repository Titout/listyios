//
//  ContentView.swift
//  App (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/app
//

import AIKit
import AdsKit
import FirebaseKit
import InAppPurchaseKit
import NotifKit
import SharedKit
import SwiftUI

struct ContentView: View {
	@State private var selectedTab = 0
	@State private var showActionMenu = false // État pour contrôler la modale
	
	init() { }
	
	var body: some View {
		TabView(selection: $selectedTab) {
			// Vue d'accueil principale
			HomeView()
				.tabItem {
					Label("Accueil", systemImage: "house")
				}
				.tag(0)
				.environment(\.tabSelection, $selectedTab)

			// Vue des listes
			ListView()
				.tabItem {
					Label("Listes", systemImage: "list.bullet")
				}
				.tag(1)
				.environment(\.tabSelection, $selectedTab)
			
			// Vue d'ajout de liste (remplacée par un bouton qui ouvre la modale)
			Color.clear // Vue transparente car on ne navigue pas
				.tabItem {
					Label("Ajouter", systemImage: "plus.circle.fill")
				}
				.tag(2)
				.onAppear {
					// Déclencher l'ouverture de la modale quand cet onglet est sélectionné
					if selectedTab == 2 {
						showActionMenu = true
						// Revenir à l'onglet précédent
						selectedTab = max(0, selectedTab - 1)
					}
				}
			
			// Pre-made Settings View for easy native-looking settings screen.
			SettingsView()
				.tabItem {
					Label("Réglages", systemImage: "gear")
				}
				.tag(3)
				.environment(\.tabSelection, $selectedTab)

			#if DEBUG
			// Use this to create quick settings and toggles to streamline the development process
			DeveloperSettingsView()
				.tabItem {
					Label("Développeur", systemImage: "hammer")
				}
				.tag(4)
				.environment(\.tabSelection, $selectedTab)
			#endif
		}
		.sheet(isPresented: $showActionMenu) {
			ActionMenuView(
				isPresented: $showActionMenu,
				onNewList: {
					// Implémentez vos callbacks ici
				},
				onAddItem: {
					// Implémentez vos callbacks ici
				},
				onInstagramImport: {
					// Implémentez vos callbacks ici
				},
				onScanList: {
					// Implémentez vos callbacks ici
				},
				onShowCardShowcase: {
					// Implémentez vos callbacks ici
				}
			)
		}
	}
}

#Preview {
	ContentView()
		.environmentObject(DB())
		.environmentObject(InAppPurchases())
}
