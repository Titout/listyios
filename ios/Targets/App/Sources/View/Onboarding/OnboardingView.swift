//
//  OnboardingView.swift
//  App (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/app/views/onboarding-view
//
//  The onboarding view is shown during the first ever launch of the app.
//  We offer a simple way to create one using multiple HeroViews, but don't be
//  afraid to customize it to yur liking.
//

import AnalyticsKit
import SharedKit
import SwiftUI

/// Set this to the views you want to show during Onboarding (first App launch ever)
/// Use these 3-4 views max to showcase the main selling point of your Application
/// Add the count in forEach loop below when adding or removing views here (swift doesnt like if its dynamic onboardingPages.count)
private let onboardingPages: [AnyView] = [
	AnyView(
		HeroView(
			image: Image(systemName: "list.clipboard.fill"),
			title: "Bienvenue sur Listy",
			subtitle: "Créez et gérez vos listes de courses\nde manière intelligente",
			bounceOnAppear: true
		)),
	AnyView(
		HeroView(
			image: Image(systemName: "camera.viewfinder"),
			title: "Scan Intelligent",
			subtitle: "Scannez vos listes manuscrites\net vos tickets de caisse")),
	AnyView(
		HeroView(
			image: Image(systemName: "person.2.fill"),
			title: "Collaboration en temps réel",
			subtitle: "Partagez et modifiez vos listes\navec vos proches"))
]

/// Is attached to the root ContentView in App.swift, and shown when the app version saved in UserDefaults
/// is NONE (means the user opens the app for the first time ever, as we save the current app version when the app is opened)
struct ShowOnboardingViewOnFirstLaunchEverModifier: ViewModifier {

	@AppStorage(Constants.UserDefaults.General.lastAppVersionAppWasOpenedAt)
	private var lastAppVersionAppWasOpenedAt: String = "NONE"

	@State private var showOnboarding: Bool = false

	func body(content: Content) -> some View {
		Group {
			if showOnboarding {
				OnboardingView {
					withAnimation(.bouncy) {
						showOnboarding = false
					}
				}
				.transition(.opacity)
			} else {
				content
					.transition(.opacity)
			}
		}
		// Do not move this into init(), as it may be called multiple times, which will result in the OnboardingView never being shown!
		.onAppear {
			if ProcessInfo.processInfo.environment["XCODE_RUNNING_FOR_PREVIEWS"] == "1" {
				self.showOnboarding = true
			} else {
				self.showOnboarding = lastAppVersionAppWasOpenedAt == "NONE"
			}
		}
	}

	/// Carousel with multiple views from the `onboardingPages` array.
	/// Users can move forward and backward via swipe gestures or by pressing the "Continue" button.
	/// On the last page the button says "Finish Onboarding" and will close the onboarding view.
	struct OnboardingView: View {
		@State var pageIndex: Int = 0

		/// Is called when the user is on last page -> finish Onboarding
		let onCompletion: () -> Void

		var body: some View {
			VStack {
				TabView(selection: $pageIndex) {
					ForEach(0..<onboardingPages.count, id: \.self) { index in
						onboardingPages[index]
							.tag(index)
					}
				}
				.tabViewStyle(.page(indexDisplayMode: .never))  // don't show the page dots

				Button(pageIndex == onboardingPages.count - 1 ? "Commencer" : "Suivant") {
					withAnimation {
						if pageIndex == onboardingPages.count - 1 {
							onCompletion()
						} else {
							pageIndex += 1
						}
					}
				}
				.buttonStyle(.borderedProminent)
				.padding(.horizontal)
				.padding(.bottom)
			}
			.background(Color(uiColor: .systemBackground))
		}
	}
}

struct HeroView: View {
	let image: Image
	let title: String
	let subtitle: String
	var bounceOnAppear: Bool = false
	
	@State private var hasAppeared = false
	
	var body: some View {
		VStack(spacing: 20) {
			image
				.resizable()
				.aspectRatio(contentMode: .fit)
				.frame(width: 120, height: 120)
				.foregroundColor(.accentColor)
				.scaleEffect(hasAppeared && bounceOnAppear ? 1.1 : 1.0)
				.animation(.spring(response: 0.5, dampingFraction: 0.5).repeatForever(), value: hasAppeared)
			
			Text(title)
				.font(.title)
				.bold()
				.multilineTextAlignment(.center)
			
			Text(subtitle)
				.font(.body)
				.foregroundColor(.secondary)
				.multilineTextAlignment(.center)
		}
		.padding(.horizontal, 40)
		.onAppear {
			if bounceOnAppear {
				hasAppeared = true
			}
		}
	}
}

#Preview {
	Text("Preview Content")
		.modifier(ShowOnboardingViewOnFirstLaunchEverModifier())
}
